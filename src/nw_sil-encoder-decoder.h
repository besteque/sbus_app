
#ifndef NW_SIL_INCLUDE_GUARD__NW_SIL_ENCODER_DECODER_H__
#define NW_SIL_INCLUDE_GUARD__NW_SIL_ENCODER_DECODER_H__

#include "nw_sil-user-definitions.h"

#ifdef __cplusplus
extern "C" { 
#endif

/* The silenator referes to libSIL functions in case that there is no easy
 * solution for encoding/decoding. Namely:                                   */
nw_sil_signal_value_t  nw_sil_frame_write_value(uint8_t* frame_p, size_t FrameSize, 
                                                size_t   BitOffset, size_t Length, 
                                                nw_sil_signal_value_t Value);

nw_sil_signal_value_t  nw_sil_frame_read_value(uint8_t* frame_p, size_t FrameSize, 
                                               size_t   BitOffset, size_t Length);
#ifdef __cplusplus
}
#endif

/* Bend the 'nw_sil_write_in_frame(...)' and 'nw_sil_read_in_frame(...)' to 
 * macros as they are defined here. That is, for example:
 *
 *       nw_sil_write_in_frame(frame_p, MY_SIGNAL, Value) 
 *
 * is routed to 
 *
 *       nw_sil_frame_set_MY_SIGNAL(frame_p, Value)
 *
 * The correspondent macroes are generated by the silenator and listed below.*/

#define  nw_sil_write_in_frame(FRAME_P, SIGNAL_NAME, VALUE)  nw_sil_frame_set_ ## SIGNAL_NAME ((FRAME_P), (VALUE))
#define  nw_sil_read_in_frame(FRAME_P, SIGNAL_NAME)          nw_sil_frame_get_ ## SIGNAL_NAME ((FRAME_P))

#define nw_sil_SBUS_APAStatus_DATA_APA_DisplayInfo_set(FRAME_P, VALUE)                       do { ((uint8_t*)(FRAME_P))[0] = (VALUE); } while(0)
#define nw_sil_SBUS_APAStatus_DATA_APA_DisplayInfo_get(FRAME_P)                              (((uint8_t*)(FRAME_P))[0])
#define nw_sil_SBUS_APAStatus_DATA_APA_Status_set(FRAME_P, VALUE)                            do { ((uint8_t*)(FRAME_P))[1] = (VALUE); } while(0)
#define nw_sil_SBUS_APAStatus_DATA_APA_Status_get(FRAME_P)                                   (((uint8_t*)(FRAME_P))[1])
#define nw_sil_SBUS_REP_SW_VERSION_BSP_VERSION_set(FRAME_P, VALUE)                           do { ((uint8_t*)(FRAME_P))[12]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[12+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[12+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[12+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_REP_SW_VERSION_BSP_VERSION_get(FRAME_P)                                  ( ((((uint8_t*)(FRAME_P))[12]) << 24)+ ((((uint8_t*)(FRAME_P))[12+1]) << 16)+ ((((uint8_t*)(FRAME_P))[12+2]) <<  8)+  (((uint8_t*)(FRAME_P))[12+3]))
#define nw_sil_SBUS_BatteryStatus_DATA_BatterySystemStatus_set(FRAME_P, VALUE)               do { ((uint8_t*)(FRAME_P))[0] = (VALUE); } while(0)
#define nw_sil_SBUS_BatteryStatus_DATA_BatterySystemStatus_get(FRAME_P)                      (((uint8_t*)(FRAME_P))[0])
#define nw_sil_SBUS_FUEL_EngineCoolant_DATA_EngineCoolantIndicated_Data_set(FRAME_P, VALUE)  do { ((uint8_t*)(FRAME_P))[0]   = (VALUE) >> 8; ((uint8_t*)(FRAME_P))[0+1] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_FUEL_EngineCoolant_DATA_EngineCoolantIndicated_Data_get(FRAME_P)         ( ((((uint8_t*)(FRAME_P))[0]) << 8)+  (((uint8_t*)(FRAME_P))[0+1]))
#define nw_sil_SBUS_Vehicle_Engine_Speed_DATA_EngineSpeedIndicated_Data_set(FRAME_P, VALUE)  do { ((uint8_t*)(FRAME_P))[0]   = (VALUE) >> 8; ((uint8_t*)(FRAME_P))[0+1] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_Vehicle_Engine_Speed_DATA_EngineSpeedIndicated_Data_get(FRAME_P)         ( ((((uint8_t*)(FRAME_P))[0]) << 8)+  (((uint8_t*)(FRAME_P))[0+1]))
#define nw_sil_SBUS_FATAL_ERROR_VIP_FATAL_ERROR_TO_VIP_set(FRAME_P, VALUE)                   do { ((uint8_t*)(FRAME_P))[0] = (VALUE); } while(0)
#define nw_sil_SBUS_FATAL_ERROR_VIP_FATAL_ERROR_TO_VIP_get(FRAME_P)                          (((uint8_t*)(FRAME_P))[0])
#define nw_sil_SBUS_FUEL_EngineCoolant_DATA_FuelIndication_Data_set(FRAME_P, VALUE)          do { ((uint8_t*)(FRAME_P))[2]   = (VALUE) >> 8; ((uint8_t*)(FRAME_P))[2+1] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_FUEL_EngineCoolant_DATA_FuelIndication_Data_get(FRAME_P)                 ( ((((uint8_t*)(FRAME_P))[2]) << 8)+  (((uint8_t*)(FRAME_P))[2+1]))
#define nw_sil_SBUS_REP_SW_VERSION_HMI_VERSION_set(FRAME_P, VALUE)                           do { ((uint8_t*)(FRAME_P))[4]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[4+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[4+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[4+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_REP_SW_VERSION_HMI_VERSION_get(FRAME_P)                                  ( ((((uint8_t*)(FRAME_P))[4]) << 24)+ ((((uint8_t*)(FRAME_P))[4+1]) << 16)+ ((((uint8_t*)(FRAME_P))[4+2]) <<  8)+  (((uint8_t*)(FRAME_P))[4+3]))
#define nw_sil_SBUS_INIT_DATA_INIT_STATUS_set(FRAME_P, VALUE)                                do { ((uint8_t*)(FRAME_P))[0] = (VALUE); } while(0)
#define nw_sil_SBUS_INIT_DATA_INIT_STATUS_get(FRAME_P)                                       (((uint8_t*)(FRAME_P))[0])
#define nw_sil_SBUS_TemperatureDisplay_DATA_InsiderTempDisplay_Data_set(FRAME_P, VALUE)      do { ((uint8_t*)(FRAME_P))[1] = (VALUE); } while(0)
#define nw_sil_SBUS_TemperatureDisplay_DATA_InsiderTempDisplay_Data_get(FRAME_P)             (((uint8_t*)(FRAME_P))[1])
#define nw_sil_SBUS_REP_SW_VERSION_KANZI_VERSION_set(FRAME_P, VALUE)                         do { ((uint8_t*)(FRAME_P))[0]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[0+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[0+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[0+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_REP_SW_VERSION_KANZI_VERSION_get(FRAME_P)                                ( ((((uint8_t*)(FRAME_P))[0]) << 24)+ ((((uint8_t*)(FRAME_P))[0+1]) << 16)+ ((((uint8_t*)(FRAME_P))[0+2]) <<  8)+  (((uint8_t*)(FRAME_P))[0+3]))
#define nw_sil_SBUS_REP_SW_VERSION_MIDWARE_VERSION_set(FRAME_P, VALUE)                       do { ((uint8_t*)(FRAME_P))[8]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[8+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[8+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[8+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_REP_SW_VERSION_MIDWARE_VERSION_get(FRAME_P)                              ( ((((uint8_t*)(FRAME_P))[8]) << 24)+ ((((uint8_t*)(FRAME_P))[8+1]) << 16)+ ((((uint8_t*)(FRAME_P))[8+2]) <<  8)+  (((uint8_t*)(FRAME_P))[8+3]))
#define nw_sil_SBUS_REP_MENU_SETUP_Menu_Language_set(FRAME_P, VALUE)                         do { ((uint8_t*)(FRAME_P))[0] = (VALUE); } while(0)
#define nw_sil_SBUS_REP_MENU_SETUP_Menu_Language_get(FRAME_P)                                (((uint8_t*)(FRAME_P))[0])
#define nw_sil_SBUS_REP_MENU_SETUP_Menu_OverSpeed_set(FRAME_P, VALUE)                        do { ((uint8_t*)(FRAME_P))[2] = (VALUE); } while(0)
#define nw_sil_SBUS_REP_MENU_SETUP_Menu_OverSpeed_get(FRAME_P)                               (((uint8_t*)(FRAME_P))[2])
#define nw_sil_SBUS_REP_MENU_SETUP_Menu_TiredDriveTime_set(FRAME_P, VALUE)                   do { ((uint8_t*)(FRAME_P))[1] = (VALUE); } while(0)
#define nw_sil_SBUS_REP_MENU_SETUP_Menu_TiredDriveTime_get(FRAME_P)                          (((uint8_t*)(FRAME_P))[1])
#define nw_sil_SBUS_TemperatureDisplay_DATA_OutsiderTempDisplay_Data_set(FRAME_P, VALUE)     do { ((uint8_t*)(FRAME_P))[0] = (VALUE); } while(0)
#define nw_sil_SBUS_TemperatureDisplay_DATA_OutsiderTempDisplay_Data_get(FRAME_P)            (((uint8_t*)(FRAME_P))[0])
#define nw_sil_SBUS_POWEROFF_POWEROFFCMD_set(FRAME_P, VALUE)                                 do { ((uint8_t*)(FRAME_P))[0] = (VALUE); } while(0)
#define nw_sil_SBUS_POWEROFF_POWEROFFCMD_get(FRAME_P)                                        (((uint8_t*)(FRAME_P))[0])
#define nw_sil_SBUS_REQ_POWEROFF_POWEROFF_STATE_set(FRAME_P, VALUE)                          do { ((uint8_t*)(FRAME_P))[0] = (VALUE); } while(0)
#define nw_sil_SBUS_REQ_POWEROFF_POWEROFF_STATE_get(FRAME_P)                                 (((uint8_t*)(FRAME_P))[0])
#define nw_sil_SBUS_PULSE_GIP_PULSENUM_GIP_set(FRAME_P, VALUE)                               do { ((uint8_t*)(FRAME_P))[0] = (VALUE); } while(0)
#define nw_sil_SBUS_PULSE_GIP_PULSENUM_GIP_get(FRAME_P)                                      (((uint8_t*)(FRAME_P))[0])
#define nw_sil_SBUS_PULSE_VIP_PULSENUM_VIP_set(FRAME_P, VALUE)                               do { ((uint8_t*)(FRAME_P))[0] = (VALUE); } while(0)
#define nw_sil_SBUS_PULSE_VIP_PULSENUM_VIP_get(FRAME_P)                                      (((uint8_t*)(FRAME_P))[0])
#define nw_sil_SBUS_PULSE_SWITCH_PULSE_SWITCH_set(FRAME_P, VALUE)                            do { ((uint8_t*)(FRAME_P))[0] = (VALUE); } while(0)
#define nw_sil_SBUS_PULSE_SWITCH_PULSE_SWITCH_get(FRAME_P)                                   (((uint8_t*)(FRAME_P))[0])
#define nw_sil_SBUS_REQ_UPGRADE_REQ_UPGRADE_set(FRAME_P, VALUE)                              do { ((uint8_t*)(FRAME_P))[0] = (VALUE); } while(0)
#define nw_sil_SBUS_REQ_UPGRADE_REQ_UPGRADE_get(FRAME_P)                                     (((uint8_t*)(FRAME_P))[0])
#define nw_sil_SBUS_REQ_SCREENSHOT_SCREENSHOTCMD_set(FRAME_P, VALUE)                         do { ((uint8_t*)(FRAME_P))[8] = (VALUE); } while(0)
#define nw_sil_SBUS_REQ_SCREENSHOT_SCREENSHOTCMD_get(FRAME_P)                                (((uint8_t*)(FRAME_P))[8])
#define nw_sil_SBUS_REP_SCREENSHOT_SCREENSHOTDOWN_set(FRAME_P, VALUE)                        do { ((uint8_t*)(FRAME_P))[0] = (VALUE); } while(0)
#define nw_sil_SBUS_REP_SCREENSHOT_SCREENSHOTDOWN_get(FRAME_P)                               (((uint8_t*)(FRAME_P))[0])
#define nw_sil_SBUS_REQ_SCREENSHOT_SCREENSHOTPARAMHW_set(FRAME_P, VALUE)                     do { ((uint8_t*)(FRAME_P))[0]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[0+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[0+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[0+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_REQ_SCREENSHOT_SCREENSHOTPARAMHW_get(FRAME_P)                            ( ((((uint8_t*)(FRAME_P))[0]) << 24)+ ((((uint8_t*)(FRAME_P))[0+1]) << 16)+ ((((uint8_t*)(FRAME_P))[0+2]) <<  8)+  (((uint8_t*)(FRAME_P))[0+3]))
#define nw_sil_SBUS_REQ_SCREENSHOT_SCREENSHOTPARAMXY_set(FRAME_P, VALUE)                     do { ((uint8_t*)(FRAME_P))[4]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[4+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[4+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[4+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_REQ_SCREENSHOT_SCREENSHOTPARAMXY_get(FRAME_P)                            ( ((((uint8_t*)(FRAME_P))[4]) << 24)+ ((((uint8_t*)(FRAME_P))[4+1]) << 16)+ ((((uint8_t*)(FRAME_P))[4+2]) <<  8)+  (((uint8_t*)(FRAME_P))[4+3]))
#define nw_sil_SBUS_ShiftGearReminder_DATA_ShiftGearReminder_Data_set(FRAME_P, VALUE)        do { ((uint8_t*)(FRAME_P))[0]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[0+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[0+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[0+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_ShiftGearReminder_DATA_ShiftGearReminder_Data_get(FRAME_P)               ( ((((uint8_t*)(FRAME_P))[0]) << 24)+ ((((uint8_t*)(FRAME_P))[0+1]) << 16)+ ((((uint8_t*)(FRAME_P))[0+2]) <<  8)+  (((uint8_t*)(FRAME_P))[0+3]))
#define nw_sil_SBUS_TC_DATA_TC_AverageFuel_Data_set(FRAME_P, VALUE)                          do { ((uint8_t*)(FRAME_P))[10]   = (VALUE) >> 8; ((uint8_t*)(FRAME_P))[10+1] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_TC_DATA_TC_AverageFuel_Data_get(FRAME_P)                                 ( ((((uint8_t*)(FRAME_P))[10]) << 8)+  (((uint8_t*)(FRAME_P))[10+1]))
#define nw_sil_SBUS_TC_DATA_TC_AverageVehicleSpeed_Data_set(FRAME_P, VALUE)                  do { ((uint8_t*)(FRAME_P))[2]   = (VALUE) >> 8; ((uint8_t*)(FRAME_P))[2+1] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_TC_DATA_TC_AverageVehicleSpeed_Data_get(FRAME_P)                         ( ((((uint8_t*)(FRAME_P))[2]) << 8)+  (((uint8_t*)(FRAME_P))[2+1]))
#define nw_sil_SBUS_TC_DATA_TC_CuurentVehicleSpeed_Data_set(FRAME_P, VALUE)                  do { ((uint8_t*)(FRAME_P))[6]   = (VALUE) >> 8; ((uint8_t*)(FRAME_P))[6+1] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_TC_DATA_TC_CuurentVehicleSpeed_Data_get(FRAME_P)                         ( ((((uint8_t*)(FRAME_P))[6]) << 8)+  (((uint8_t*)(FRAME_P))[6+1]))
#define nw_sil_SBUS_TC_DATA_TC_DTEIndication_Data_set(FRAME_P, VALUE)                        do { ((uint8_t*)(FRAME_P))[0]   = (VALUE) >> 8; ((uint8_t*)(FRAME_P))[0+1] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_TC_DATA_TC_DTEIndication_Data_get(FRAME_P)                               ( ((((uint8_t*)(FRAME_P))[0]) << 8)+  (((uint8_t*)(FRAME_P))[0+1]))
#define nw_sil_SBUS_TC_DATA_TC_DriveTime_Data_set(FRAME_P, VALUE)                            do { ((uint8_t*)(FRAME_P))[4]   = (VALUE) >> 8; ((uint8_t*)(FRAME_P))[4+1] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_TC_DATA_TC_DriveTime_Data_get(FRAME_P)                                   ( ((((uint8_t*)(FRAME_P))[4]) << 8)+  (((uint8_t*)(FRAME_P))[4+1]))
#define nw_sil_SBUS_TC_DATA_TC_InstantFuel_Data_set(FRAME_P, VALUE)                          do { ((uint8_t*)(FRAME_P))[8]   = (VALUE) >> 8; ((uint8_t*)(FRAME_P))[8+1] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_TC_DATA_TC_InstantFuel_Data_get(FRAME_P)                                 ( ((((uint8_t*)(FRAME_P))[8]) << 8)+  (((uint8_t*)(FRAME_P))[8+1]))
#define nw_sil_SBUS_Odometer_DATA_TC_OdometerIndicated_Data_set(FRAME_P, VALUE)              do { ((uint8_t*)(FRAME_P))[8]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[8+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[8+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[8+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_Odometer_DATA_TC_OdometerIndicated_Data_get(FRAME_P)                     ( ((((uint8_t*)(FRAME_P))[8]) << 24)+ ((((uint8_t*)(FRAME_P))[8+1]) << 16)+ ((((uint8_t*)(FRAME_P))[8+2]) <<  8)+  (((uint8_t*)(FRAME_P))[8+3]))
#define nw_sil_SBUS_Odometer_DATA_TC_TripAIndicated_Data_set(FRAME_P, VALUE)                 do { ((uint8_t*)(FRAME_P))[4]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[4+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[4+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[4+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_Odometer_DATA_TC_TripAIndicated_Data_get(FRAME_P)                        ( ((((uint8_t*)(FRAME_P))[4]) << 24)+ ((((uint8_t*)(FRAME_P))[4+1]) << 16)+ ((((uint8_t*)(FRAME_P))[4+2]) <<  8)+  (((uint8_t*)(FRAME_P))[4+3]))
#define nw_sil_SBUS_Odometer_DATA_TC_TripBIndicated_Data_set(FRAME_P, VALUE)                 do { ((uint8_t*)(FRAME_P))[0]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[0+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[0+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[0+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_Odometer_DATA_TC_TripBIndicated_Data_get(FRAME_P)                        ( ((((uint8_t*)(FRAME_P))[0]) << 24)+ ((((uint8_t*)(FRAME_P))[0+1]) << 16)+ ((((uint8_t*)(FRAME_P))[0+2]) <<  8)+  (((uint8_t*)(FRAME_P))[0+3]))
#define nw_sil_SBUS_TPMS_DATA_TPMS_Press_Data_set(FRAME_P, VALUE)                            do { ((uint8_t*)(FRAME_P))[8]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[8+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[8+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[8+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_TPMS_DATA_TPMS_Press_Data_get(FRAME_P)                                   ( ((((uint8_t*)(FRAME_P))[8]) << 24)+ ((((uint8_t*)(FRAME_P))[8+1]) << 16)+ ((((uint8_t*)(FRAME_P))[8+2]) <<  8)+  (((uint8_t*)(FRAME_P))[8+3]))
#define nw_sil_SBUS_TPMS_DATA_TPMS_Temper_Data_set(FRAME_P, VALUE)                           do { ((uint8_t*)(FRAME_P))[4]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[4+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[4+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[4+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_TPMS_DATA_TPMS_Temper_Data_get(FRAME_P)                                  ( ((((uint8_t*)(FRAME_P))[4]) << 24)+ ((((uint8_t*)(FRAME_P))[4+1]) << 16)+ ((((uint8_t*)(FRAME_P))[4+2]) <<  8)+  (((uint8_t*)(FRAME_P))[4+3]))
#define nw_sil_SBUS_TPMS_DATA_TPMS_TireSts_Data_set(FRAME_P, VALUE)                          do { ((uint8_t*)(FRAME_P))[0]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[0+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[0+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[0+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_TPMS_DATA_TPMS_TireSts_Data_get(FRAME_P)                                 ( ((((uint8_t*)(FRAME_P))[0]) << 24)+ ((((uint8_t*)(FRAME_P))[0+1]) << 16)+ ((((uint8_t*)(FRAME_P))[0+2]) <<  8)+  (((uint8_t*)(FRAME_P))[0+3]))
#define nw_sil_SUBS_TelltaleCtrl_DATA_Telltale_H_Data_set(FRAME_P, VALUE)                    do { ((uint8_t*)(FRAME_P))[2]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[2+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[2+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[2+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SUBS_TelltaleCtrl_DATA_Telltale_H_Data_get(FRAME_P)                           ( ((((uint8_t*)(FRAME_P))[2]) << 24)+ ((((uint8_t*)(FRAME_P))[2+1]) << 16)+ ((((uint8_t*)(FRAME_P))[2+2]) <<  8)+  (((uint8_t*)(FRAME_P))[2+3]))
#define nw_sil_SUBS_TelltaleCtrl_DATA_Telltale_L_Data_set(FRAME_P, VALUE)                    do { ((uint8_t*)(FRAME_P))[6]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[6+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[6+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[6+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SUBS_TelltaleCtrl_DATA_Telltale_L_Data_get(FRAME_P)                           ( ((((uint8_t*)(FRAME_P))[6]) << 24)+ ((((uint8_t*)(FRAME_P))[6+1]) << 16)+ ((((uint8_t*)(FRAME_P))[6+2]) <<  8)+  (((uint8_t*)(FRAME_P))[6+3]))
#define nw_sil_SUBS_TelltaleCtrl_DATA_Telltale_M_Data_set(FRAME_P, VALUE)                    do { ((uint8_t*)(FRAME_P))[0]   = (VALUE) >> 8; ((uint8_t*)(FRAME_P))[0+1] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SUBS_TelltaleCtrl_DATA_Telltale_M_Data_get(FRAME_P)                           ( ((((uint8_t*)(FRAME_P))[0]) << 8)+  (((uint8_t*)(FRAME_P))[0+1]))
#define nw_sil_SBUS_REQ_SW_VERSION_VIP_REQ_SW_VERSION_set(FRAME_P, VALUE)                    do { ((uint8_t*)(FRAME_P))[0]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[0+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[0+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[0+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_REQ_SW_VERSION_VIP_REQ_SW_VERSION_get(FRAME_P)                           ( ((((uint8_t*)(FRAME_P))[0]) << 24)+ ((((uint8_t*)(FRAME_P))[0+1]) << 16)+ ((((uint8_t*)(FRAME_P))[0+2]) <<  8)+  (((uint8_t*)(FRAME_P))[0+3]))
#define nw_sil_SBUS_Vehicle_Engine_Speed_DATA_VehicleSpeedIndicated_Data_set(FRAME_P, VALUE) do { ((uint8_t*)(FRAME_P))[2]   = (VALUE) >> 8; ((uint8_t*)(FRAME_P))[2+1] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_Vehicle_Engine_Speed_DATA_VehicleSpeedIndicated_Data_get(FRAME_P)        ( ((((uint8_t*)(FRAME_P))[2]) << 8)+  (((uint8_t*)(FRAME_P))[2+1]))
#define nw_sil_SBUS_WarningID_DATA_WarningInfo_H_Data_set(FRAME_P, VALUE)                    do { ((uint8_t*)(FRAME_P))[0]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[0+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[0+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[0+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_WarningID_DATA_WarningInfo_H_Data_get(FRAME_P)                           ( ((((uint8_t*)(FRAME_P))[0]) << 24)+ ((((uint8_t*)(FRAME_P))[0+1]) << 16)+ ((((uint8_t*)(FRAME_P))[0+2]) <<  8)+  (((uint8_t*)(FRAME_P))[0+3]))
#define nw_sil_SBUS_WarningID_DATA_WarningInfo_L_Data_set(FRAME_P, VALUE)                    do { ((uint8_t*)(FRAME_P))[4]   = ((VALUE) >> 24); ((uint8_t*)(FRAME_P))[4+1] = ((VALUE) >> 16) & 0xFF; ((uint8_t*)(FRAME_P))[4+2] = ((VALUE) >> 8)  & 0xFF; ((uint8_t*)(FRAME_P))[4+3] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_WarningID_DATA_WarningInfo_L_Data_get(FRAME_P)                           ( ((((uint8_t*)(FRAME_P))[4]) << 24)+ ((((uint8_t*)(FRAME_P))[4+1]) << 16)+ ((((uint8_t*)(FRAME_P))[4+2]) <<  8)+  (((uint8_t*)(FRAME_P))[4+3]))
#define nw_sil_SBUS_KeyCtrl_DATA_Wheel_Key_Data_set(FRAME_P, VALUE)                          do { ((uint8_t*)(FRAME_P))[0]   = (VALUE) >> 8; ((uint8_t*)(FRAME_P))[0+1] = (VALUE) & 0xFF; } while(0)
#define nw_sil_SBUS_KeyCtrl_DATA_Wheel_Key_Data_get(FRAME_P)                                 ( ((((uint8_t*)(FRAME_P))[0]) << 8)+  (((uint8_t*)(FRAME_P))[0+1]))
/* #endif NW_SIL_OPTION_DIRECT_SIGNAL_ACCESS_IN_FRAME */


/* Frame/Message IDs */
#define NW_SIL_SBUS_APAStatus_DATA_ID            0x400C
#define NW_SIL_SBUS_BatteryStatus_DATA_ID        0x400B
#define NW_SIL_SBUS_FATAL_ERROR_VIP_ID           0x8001
#define NW_SIL_SBUS_FUEL_EngineCoolant_DATA_ID   0x4001
#define NW_SIL_SBUS_INIT_DATA_ID                 0x8000
#define NW_SIL_SBUS_KeyCtrl_DATA_ID              0x4007
#define NW_SIL_SBUS_Odometer_DATA_ID             0x4004
#define NW_SIL_SBUS_POWEROFF_ID                  0x0001
#define NW_SIL_SBUS_PULSE_GIP_ID                 0x8002
#define NW_SIL_SBUS_PULSE_SWITCH_ID              0x8004
#define NW_SIL_SBUS_PULSE_VIP_ID                 0x4009
#define NW_SIL_SBUS_REP_MENU_SETUP_ID            0xC002
#define NW_SIL_SBUS_REP_SCREENSHOT_ID            0xC001
#define NW_SIL_SBUS_REP_SW_VERSION_ID            0xC000
#define NW_SIL_SBUS_REQ_POWEROFF_ID              0x8003
#define NW_SIL_SBUS_REQ_SCREENSHOT_ID            0x0002
#define NW_SIL_SBUS_REQ_SW_VERSION_ID            0x0000
#define NW_SIL_SBUS_REQ_UPGRADE_ID               0x8005
#define NW_SIL_SBUS_ShiftGearReminder_DATA_ID    0x4002
#define NW_SIL_SBUS_TC_DATA_ID                   0x4005
#define NW_SIL_SBUS_TPMS_DATA_ID                 0x4008
#define NW_SIL_SBUS_TemperatureDisplay_DATA_ID   0x4003
#define NW_SIL_SBUS_Vehicle_Engine_Speed_DATA_ID 0x4000
#define NW_SIL_SBUS_WarningID_DATA_ID            0x400A
#define NW_SIL_SUBS_TelltaleCtrl_DATA_ID         0x4006


static nw_sil_frame_size_t nw_sil_map_frame_id_to_frame_size(nw_sil_frame_id_t FrameID) {
    switch(FrameID) {
    case 0x0: return (nw_sil_frame_id_t)4;
    case 0x1: return (nw_sil_frame_id_t)1;
    case 0x2: return (nw_sil_frame_id_t)9;
    case 0x4000: return (nw_sil_frame_id_t)4;
    case 0x4001: return (nw_sil_frame_id_t)4;
    case 0x4002: return (nw_sil_frame_id_t)4;
    case 0x4003: return (nw_sil_frame_id_t)2;
    case 0x4004: return (nw_sil_frame_id_t)12;
    case 0x4005: return (nw_sil_frame_id_t)12;
    case 0x4006: return (nw_sil_frame_id_t)10;
    case 0x4007: return (nw_sil_frame_id_t)2;
    case 0x4008: return (nw_sil_frame_id_t)12;
    case 0x4009: return (nw_sil_frame_id_t)1;
    case 0x400A: return (nw_sil_frame_id_t)8;
    case 0x400B: return (nw_sil_frame_id_t)1;
    case 0x400C: return (nw_sil_frame_id_t)2;
    case 0x8000: return (nw_sil_frame_id_t)1;
    case 0x8001: return (nw_sil_frame_id_t)1;
    case 0x8002: return (nw_sil_frame_id_t)1;
    case 0x8003: return (nw_sil_frame_id_t)1;
    case 0x8004: return (nw_sil_frame_id_t)1;
    case 0x8005: return (nw_sil_frame_id_t)1;
    case 0xC000: return (nw_sil_frame_id_t)16;
    case 0xC001: return (nw_sil_frame_id_t)1;
    case 0xC002: return (nw_sil_frame_id_t)3;
    default: return (nw_sil_frame_id_t)0;
    }
    /* Avoid warning for unused function. */
    if( 0 )
    {
        (void)nw_sil_map_frame_id_to_frame_size((nw_sil_frame_id_t)0);
    }
}
#endif /* NW_SIL_INCLUDE_GUARD__NW_SIL_ENCODER_DECODER_H__ */
